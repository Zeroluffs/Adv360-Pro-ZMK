/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    quick-tap-ms = <175>;
};

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL         &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                     &mo 3      &kp N6  &kp N7  &kp N8     &kp N9    &kp N0          &kp MINUS
&kp TAB           &kp Q      &kp W     &kp F     &kp P      &kp G   &to 5                                                      &kp GRAVE  &kp J   &kp L   &kp U      &kp Y     &kp APOSTROPHE  &kp BSLH
&kp LEFT_CONTROL  &kp A      &kp R     &kp S     &kp T      &kp D   &kp ESC  &kp EQUAL   &kp EQUAL       &kp LGUI   &kp RALT   &mo 4      &kp H   &kp N   &kp E      &kp I     &kp O           &kp SQT
&kp BACKSPACE     &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME        &kp SLASH                        &kp K   &kp M   &kp COMMA  &kp DOT   &kp SLASH       &kp BACKSPACE
&mo 2             &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &sl 5    &kp LSHIFT  &kp ESCAPE      &lt 2 DOT  &kp SPACE  &sl 7              &kp UP  &kp DOWN   &kp LBKT  &kp RBKT        &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1        &kp N2        &kp N3            &kp N4        &kp N5   &trans                                                    &mo 3   &kp N6   &kp KP_NUM       &kp KP_EQUAL       &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp N7        &kp N5        &kp NUMBER_3      &kp NUMBER_1  &kp N9   &none                                                     &none   &kp N8   &kp N0           &kp NUMBER_2       &kp NUMBER_4   &kp NUMBER_6     &kp BSLH
&kp ESC    &sk LEFT_GUI  &sk LEFT_ALT  &sk LEFT_CONTROL  &kp LSHIFT    &kp F11  &none   &kp LCTRL   &kp LALT        &kp LGUI   &kp RCTRL  &none   &kp F10  &sk RIGHT_SHIFT  &sk RIGHT_CONTROL  &sk RIGHT_ALT  &kp RGUI         &kp SQT
&kp LSHFT  &kp F7        &kp F5        &kp F3            &kp F1        &kp F9                       &kp HOME        &kp PG_UP                     &kp F8   &kp F12          &kp F2             &kp F4         &kp F6           &kp RSHFT
&mo 2      &kp GRAVE     &kp CAPS      &kp LEFT          &kp RIGHT              &trans  &kp LSHIFT  &kp PERIOD      &kp PG_DN  &kp SPACE  &trans           &kp UP           &kp DOWN           &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2   &kp F3  &kp F4  &kp F5  &kp F6           &tog 1                                      &mo 3   &kp F7  &kp F8           &kp F9             &kp F10        &kp F11        &kp F12
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN  &none                                       &none   &trans  &trans           &trans             &trans         &trans         &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK   &none   &trans  &trans      &trans  &trans  &none   &trans  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK                  &trans      &trans                  &trans  &trans           &trans             &trans         &trans         &trans
&trans  &trans   &trans  &trans  &trans                   &trans  &trans  &trans      &trans  &trans  &trans          &trans           &trans             &trans         &trans         &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_Layer__4 {
            bindings = <
&trans  &trans          &trans           &trans            &trans             &trans                &trans                                                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans           &trans            &trans             &trans                &trans                                                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans           &trans            &trans             &trans                                               &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans           &trans            &trans                                   &trans                 &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        nav {
            bindings = <
&kp EQUAL             &kp F1        &kp F2        &trans            &trans         &trans             &trans                                                &mo 3      &trans        &trans          &trans        &trans            &trans             &kp MINUS
&kp TAB               &kp TAB       &kp W         &kp F             &kp P          &kp C_VOLUME_UP    &to 0                                                 &kp GRAVE  &kp C_RESET   &kp HOME        &kp UP_ARROW  &kp END           &kp DELETE         &kp BSLH
&kp LC(LEFT_CONTROL)  &sk LEFT_GUI  &sk LEFT_ALT  &sk LEFT_CONTROL  &sk LSHIFT     &kp C_VOLUME_DOWN  &trans  &trans      &trans      &trans     &trans     &mo 4      &kp CAPSLOCK  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT         &kp BACKSPACE      &kp SQT
&kp BACKSPACE         &kp Z         &kp X         &kp K_BACK        &kp K_FORWARD  &kp K_PLAY_PAUSE                       &trans      &kp SLASH                        &kp INSERT    &kp PAGE_DOWN   &kp PAGE_UP   &kp PAGE_UP       &kp ENTER          &trans
&mo 2                 &kp GRAVE     &kp CAPS      &kp LEFT          &kp RIGHT                         &sl 5   &kp LSHIFT  &trans      &lt 1 DOT  &kp SPACE  &sl 7                    &kp UP          &kp DOWN      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
            >;
        };

        sym {
            bindings = <
&trans  &trans          &trans         &trans       &trans                &trans           &trans                                                                           &trans  &trans  &trans           &trans             &trans         &trans    &trans
&trans  &kp LEFT_BRACE  &kp AMPERSAND  &kp ASTRK    &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE  &trans                                                                           &trans  &trans  &trans           &trans             &trans         &trans    &trans
&trans  &kp COLON       &kp DOLLAR     &kp PERCENT  &kp CARET             &kp PLUS         &trans                &trans                 &trans              &trans  &trans  &trans  &trans  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RGUI  &trans
&trans  &kp TILDE       &kp EXCL       &kp AT       &kp HASH              &kp PIPE                                                      &trans              &trans                  &trans  &trans           &trans             &trans         &trans    &trans
&trans  &trans          &trans         &trans       &trans                                 &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE      &trans  &trans  &trans          &trans           &trans             &trans         &trans    &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans     &trans            &trans          &trans                &trans       &trans                                                 &trans  &trans     &trans                 &trans             &trans             &trans         &trans
&trans  &kp ESC    &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp TILDE    &trans                                                 &trans  &kp CARET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE    &kp RIGHT_BRACKET  &kp GRAVE      &trans
&trans  &kp MINUS  &kp ASTRK         &kp EQUAL       &kp UNDER             &kp DOLLAR   &trans  &trans          &trans      &trans  &trans     &trans  &kp HASH   &sk RSHIFT             &sk RIGHT_CONTROL  &sk RIGHT_ALT      &sk RIGHT_GUI  &trans
&trans  &kp PLUS   &kp PIPE          &kp AT          &kp KP_DIVIDE         &kp PERCENT                          &trans      &trans                     &trans     &kp BACKSLASH          &kp AMPERSAND      &kp QUESTION       &sk EXCL       &trans
&trans  &trans     &trans            &trans          &trans                             &sl 5   &kp LEFT_SHIFT  &trans      &trans  &kp SPACE  &sl 7              &trans                 &trans             &trans             &trans         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        num {
            if-layers = <5 7>;
            then-layer = <1>;
        };
    };
};
